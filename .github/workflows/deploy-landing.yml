name: Deploy Landing Page to GitHub Pages

on:
  push:
    tags:
      - 'landing_v*'  # Trigger on tags like landing_v0.2.0
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
          cache-dependency-path: 'landing/pnpm-lock.yaml'
          
      - name: Install pnpm
        run: npm install -g pnpm
        
      - name: Install dependencies
        working-directory: ./landing
        run: pnpm install --frozen-lockfile
        
      - name: Build Next.js application
        working-directory: ./landing
        run: |
          pnpm build
          
      - name: Upload build artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./landing/out
          
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: Add deployment status
        run: |
          echo "üöÄ Landing page deployed successfully!"
          echo "üìç URL: ${{ steps.deployment.outputs.page_url }}"
          echo "üè∑Ô∏è Tag: ${{ github.ref_name }}"