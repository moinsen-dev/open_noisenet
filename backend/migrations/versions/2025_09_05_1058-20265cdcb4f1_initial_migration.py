"""Initial migration

Revision ID: 20265cdcb4f1
Revises: 
Create Date: 2025-09-05 10:58:44.625583+00:00

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '20265cdcb4f1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=True),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('devices',
    sa.Column('device_id', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('device_type', sa.Enum('SMARTPHONE', 'ESP32', 'RASPBERRY_PI', 'CUSTOM', name='devicetype'), nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=True),
    sa.Column('location_lat', sa.Numeric(precision=10, scale=8), nullable=True),
    sa.Column('location_lng', sa.Numeric(precision=11, scale=8), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('firmware_version', sa.String(length=50), nullable=True),
    sa.Column('hardware_info', sa.JSON(), nullable=True),
    sa.Column('calibration_offset', sa.Float(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('last_seen', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_heartbeat', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_devices_device_id'), 'devices', ['device_id'], unique=True)
    op.create_table('device_api_keys',
    sa.Column('device_id', sa.UUID(), nullable=False),
    sa.Column('key_hash', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('last_used', sa.DateTime(timezone=True), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_device_api_keys_key_hash'), 'device_api_keys', ['key_hash'], unique=True)
    op.create_table('event_aggregations',
    sa.Column('device_id', sa.UUID(), nullable=False),
    sa.Column('time_bucket', sa.DateTime(timezone=True), nullable=False),
    sa.Column('bucket_duration', sa.Interval(), nullable=False),
    sa.Column('avg_leq_db', sa.Float(), nullable=True),
    sa.Column('max_leq_db', sa.Float(), nullable=True),
    sa.Column('min_leq_db', sa.Float(), nullable=True),
    sa.Column('event_count', sa.Integer(), nullable=True),
    sa.Column('exceedance_count', sa.Integer(), nullable=True),
    sa.Column('exceedance_pct', sa.Float(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_event_aggregations_time_bucket'), 'event_aggregations', ['time_bucket'], unique=False)
    op.create_table('events',
    sa.Column('device_id', sa.UUID(), nullable=False),
    sa.Column('timestamp_start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('timestamp_end', sa.DateTime(timezone=True), nullable=False),
    sa.Column('leq_db', sa.Float(), nullable=False),
    sa.Column('lmax_db', sa.Float(), nullable=True),
    sa.Column('lmin_db', sa.Float(), nullable=True),
    sa.Column('laeq_db', sa.Float(), nullable=True),
    sa.Column('exceedance_pct', sa.Float(), nullable=True),
    sa.Column('samples_count', sa.Integer(), nullable=True),
    sa.Column('rule_triggered', sa.String(length=100), nullable=True),
    sa.Column('location_lat', sa.Numeric(precision=10, scale=8), nullable=True),
    sa.Column('location_lng', sa.Numeric(precision=11, scale=8), nullable=True),
    sa.Column('weather_conditions', sa.JSON(), nullable=True),
    sa.Column('event_metadata', sa.JSON(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSED', 'FAILED', name='eventstatus'), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_events_timestamp_start'), 'events', ['timestamp_start'], unique=False)
    op.create_table('audio_snippets',
    sa.Column('event_id', sa.UUID(), nullable=False),
    sa.Column('codec', sa.String(length=20), nullable=False),
    sa.Column('duration_seconds', sa.Integer(), nullable=False),
    sa.Column('sample_rate', sa.Integer(), nullable=False),
    sa.Column('file_size_bytes', sa.Integer(), nullable=True),
    sa.Column('file_path', sa.String(length=500), nullable=True),
    sa.Column('encryption_key_hash', sa.String(length=64), nullable=True),
    sa.Column('checksum', sa.String(length=64), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_processed', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_audio_snippets_expires_at'), 'audio_snippets', ['expires_at'], unique=False)
    op.create_index(op.f('ix_audio_snippets_uploaded_at'), 'audio_snippets', ['uploaded_at'], unique=False)
    op.create_table('event_labels',
    sa.Column('event_id', sa.UUID(), nullable=False),
    sa.Column('label', sa.String(length=100), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=False),
    sa.Column('model_version', sa.String(length=50), nullable=True),
    sa.Column('model_type', sa.String(length=50), nullable=True),
    sa.Column('processing_time_ms', sa.Integer(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_event_labels_label'), 'event_labels', ['label'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_event_labels_label'), table_name='event_labels')
    op.drop_table('event_labels')
    op.drop_index(op.f('ix_audio_snippets_uploaded_at'), table_name='audio_snippets')
    op.drop_index(op.f('ix_audio_snippets_expires_at'), table_name='audio_snippets')
    op.drop_table('audio_snippets')
    op.drop_index(op.f('ix_events_timestamp_start'), table_name='events')
    op.drop_table('events')
    op.drop_index(op.f('ix_event_aggregations_time_bucket'), table_name='event_aggregations')
    op.drop_table('event_aggregations')
    op.drop_index(op.f('ix_device_api_keys_key_hash'), table_name='device_api_keys')
    op.drop_table('device_api_keys')
    op.drop_index(op.f('ix_devices_device_id'), table_name='devices')
    op.drop_table('devices')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###